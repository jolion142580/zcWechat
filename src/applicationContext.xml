<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
                xmlns:context="http://www.springframework.org/schema/context"
                xmlns:tx="http://www.springframework.org/schema/tx"
                xmlns:aop="http://www.springframework.org/schema/aop"
                xmlns:task="http://www.springframework.org/schema/task"
                xsi:schemaLocation="http://www.springframework.org/schema/beans 
                                                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                                                        http://www.springframework.org/schema/context 
                                                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                                                        http://www.springframework.org/schema/tx 
                                                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                                                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                                                        http://www.springframework.org/schema/task  
														http://www.springframework.org/schema/task/spring-task-3.0.xsd ">
 	<context:component-scan base-package="*" />
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="configLocation"
			value="classpath:hibernate.cfg.xml">
		</property>
				<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.SQLServerDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- 可以自动创建数据库表(create),不创建(none) -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
			</props>

		</property>
		<!-- 包扫描的方式加载注解类(推荐) -->
		<property name="packagesToScan">
			<list>
				<value>com.gdyiko.*</value>
			</list>
		</property>
		
	</bean>

		<task:annotation-driven/> <!-- 定时器 -->
 	<aop:aspectj-autoproxy/>             
	 <bean id="sysMsgAdvice" class="com.gdyiko.base.advice.SysMsgAdvice"/>
	 	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<!-- 声明事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- propagation="REQUIRED"代表支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。 -->
			<!-- <tx:method name="find*" propagation="REQUIRED"  />
			<tx:method name="list*" read-only="true" propagation="SUPPORTS" /> -->
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"  />
			<tx:method name="modify*" propagation="REQUIRED"  />
			<tx:method name="*" read-only="false"
				propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 声明式事务管理:定义切面 -->
	<aop:config>
		<!-- 定义切入点 expression="execution(* com.test.testAda.test.model.service.*.*(..))" 
			其中第一个*代表返回值，第二*代表service下子包，第三个*代表方法名，“（..）”代表方法参数。 
                        注意第一个*后面要打一个空格，要不然会报表达式错误-->
		<aop:pointcut expression="execution(* com.gdyiko.*.service.*.*(..))"
			id="serviceMethod" />
	    <!-- 把切入点和事务通知联系起来 -->
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/>
	</aop:config>

	<bean id="YuyueTimedTask" class="com.gdyiko.zcwx.timer.YuyueTimedTask" scope="singleton"  init-method="showTimer"></bean>
	<!--<bean id="YuyueTimedTask" class="com.gdyiko.zcwx.timer.YuyueTimedTask" scope="singleton" ></bean>-->

	</beans>